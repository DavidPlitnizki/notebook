{"version":3,"sources":["components/Board/Board.module.css","components/Toggle/ToggleTheme.module.css","components/Header/Header.module.css","components/Form/Form.module.css","components/App/App.module.css","components/Navigation/Navigation.module.css","components/Note/Note.module.css","serviceWorker.ts","components/Badge/Badge.tsx","components/Navigation/Navigation.tsx","components/Toggle/ToggleTheme.tsx","store/ThemeSlice.ts","components/Header/Header.tsx","store/TaskSlice.ts","hooks/useStorage.tsx","components/Note/Note.tsx","components/List/NoteList.tsx","components/Board/Board.tsx","components/Pages/ListPage.tsx","components/Form/Form.tsx","components/Pages/MainPage.tsx","components/Pages/NoMatch.tsx","routerApp.tsx","components/App/App.tsx","store/index.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Badge","count","type","className","Navigation","memo","theme","styles","dark","to","process","ToggleTheme","changeTheme","themeClass","day","toggle_wrapper","circle","onClick","toggleTheme","themeSlice","createSlice","name","initialState","reducers","state","action","payload","actions","Header","tasksList","useSelector","tasks","shallowEqual","themeStyle","dispatch","useDispatch","changeThemeCB","useCallback","bright","wrapper","id","htmlFor","length","taskSlice","addTask","newState","deleteTask","filtredTasks","filter","task","addStoredTasks","updateStatusTask","push","useStorage","getAll","parsedRes","res","localStorage","getItem","JSON","parse","save","newTasks","result","setItem","stringify","removeTask","item","getTask","updateTask","Note","data","dragStart","draggable","onDragStart","title","status","pre_init","desc","NoteList","onDrag","map","key","e","Board","props","useState","todoTasks","setTodoTasks","progressTasks","setProgressTasks","doneTasks","setDoneTasks","dragItem","useRef","useEffect","list","onDragOverHandler","preventDefault","onDragStartHandler","current","filtredDataByTask","filtredTodoTasks","fromTask","filtredProgressTasks","filtredDoneTasks","onDropHandler","dropTarget","newTask","col","target","onDragOver","onDrop","Listpage","setTasks","taskLength","setTaskLength","Form","onAddTask","input","setInput","txtArea","setTxtArea","clearTextFields","onSubmit","event","formObj","Date","now","onChange","value","style","width","placeholder","height","Main","addNewtask","NoMatch","RouterApp","exact","path","component","MainPage","ListPage","App","storedTasks","styleTheme","store","configureStore","reducer","taskSliceReducer","themeSliceReducer","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,IAAM,mBAAmB,OAAS,wB,mBCArFD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,OAAS,4BAA4B,IAAM,yBAAyB,KAAO,4B,iBCAlJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,KAAO,uB,kBCA3FD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,KAAO,oB,sCCAxDD,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,SAAW,yB,8JCWTC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mCCPSC,G,MAR0C,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjE,OACE,yBAAKC,UAAS,0BAAqBD,IACjC,8BAAOD,M,iBCeEG,EAbsBC,gBAAK,gBAAGC,EAAH,EAAGA,MAAH,OACxC,yBAAKH,UAAS,UAAe,WAAVG,EAAqB,GAAKC,IAAOC,OAClD,wBAAIL,UAAU,UACZ,4BACE,kBAAC,IAAD,CAAMM,GAAE,UAAKC,YAAL,MAAR,SAEF,4BACE,kBAAC,IAAD,CAAMD,GAAE,UAAKC,YAAL,UAAR,a,iBCWOC,EAlBuBN,gBAAK,YAA6B,IAA1BO,EAAyB,EAAzBA,YAAaN,EAAY,EAAZA,MAMnDO,EAAuB,WAAVP,EAAqBC,IAAOO,IAAMP,IAAOC,KAE5D,OACE,yBAAKL,UAAWI,IAAOQ,gBACrB,yBACEZ,UAAWI,IAAOS,OAAS,IAAMH,EACjCI,QAAS,kBAXK,SAACX,GAEnBM,EAD4B,WAAVN,EAAqB,OAAS,UAU7BY,CAAYZ,U,QCbtBa,EAAaC,YAAY,CACpCC,KAAM,QACNC,aANgC,CAChChB,MAAO,UAMPiB,SAAU,CAMRX,YAAa,SAACY,EAAOC,GACnBD,EAAMlB,MAAQmB,EAAOC,QAAQpB,UAMpBM,EAAgBO,EAAWQ,QAA3Bf,YAEAO,IAAf,QCmCeS,EAjDU,WACvB,IAAMC,EAAYC,aAChB,SAACN,GAAD,OAAsBA,EAAMO,MAAMA,QAClCC,KAEIC,EAAaH,aACjB,SAACN,GAAD,OAAsBA,EAAMlB,MAAMA,QAClC0B,KAEIE,EAAWC,cAEXC,EAAgBC,uBACpB,SAAC/B,GACC4B,EAAStB,EAAY,CAAEN,aAEzB,CAAC4B,IAGGrB,EAA4B,WAAfoB,EAA0B1B,IAAO+B,OAAS/B,IAAOC,KAEpE,OACE,yBAAKL,UAAS,2BAAsBU,EAAtB,YAAoCN,IAAOgC,UACvD,yBAAKpC,UAAU,aACb,4BACE,kBAAC,IAAD,CAAMM,GAAE,UAAKC,YAAL,MAAR,cAGJ,kBAAC,EAAD,CAAaE,YAAawB,EAAe9B,MAAO2B,IAChD,yBAAK9B,UAAU,eACb,2BAAOqC,GAAG,eAAetC,KAAK,WAAWmB,KAAK,iBAC9C,gCACE,2BAAOoB,QAAQ,gBACb,yBAAKtC,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,WAGlB0B,EAAUa,OAAS,GAAK,kBAAC,EAAD,CAAOxC,KAAK,OAAOD,MAAO4B,EAAUa,SAC7D,yBAAKvC,UAAU,oBACb,kBAAC,EAAD,CAAYG,MAAO2B,IAClBJ,EAAUa,OAAS,GAClB,kBAAC,EAAD,CAAOxC,KAAK,OAAOD,MAAO4B,EAAUa,a,qCC7CnCC,EAAYvB,YAAY,CACnCC,KAAM,OACNC,aAN+B,CAC/BS,MAAO,IAMPR,SAAU,CAKRqB,QAAS,SAACpB,EAAOC,GACf,IAAMoB,EAAQ,sBAAOrB,EAAMO,OAAb,CAAoBN,EAAOC,UACzCF,EAAMO,MAAQc,GAEhBC,WAAY,SAACtB,EAAOC,GAClB,IAAMsB,EAAevB,EAAMO,MAAMiB,QAC/B,SAACC,GAAD,OAAUA,EAAKT,KAAOf,EAAOC,WAE/BF,EAAMO,MAAQgB,GAEhBG,eAAgB,SAAC1B,EAAOC,GACtB,IAAMoB,EAAQ,sBAAOrB,EAAMO,OAAb,YAAuBN,EAAOC,UAC5CF,EAAMO,MAAQc,GAEhBM,iBAAkB,SAAC3B,EAAOC,GACxB,IAAMoB,EAAWrB,EAAMO,MAAMiB,QAC3B,SAACC,GAAD,OAAUA,EAAKT,KAAOf,EAAOC,QAAQc,MAEvCK,EAASO,KAAK3B,EAAOC,SACrBF,EAAMO,MAAQc,M,EAOlBF,EAAUhB,QADGiB,E,EAAAA,QAASE,E,EAAAA,WAAYI,E,EAAAA,eAAgBC,E,EAAAA,iBAGrCR,IAAf,Q,iBCvCaU,EAAa,WACxB,IAyCMC,EAAS,WACb,IAAIC,EAAqB,GACnBC,EAAMC,aAAaC,QA9CT,SAmDhB,OAJIF,IACFD,EAAYI,KAAKC,MAAMJ,IAGlBD,GAGT,MAAO,CAAEM,KAnDI,SAACZ,GACZ,IAAIa,EAAoB,GAClBN,EAAMC,aAAaC,QALT,SAMhB,GAAIF,EAAK,CACP,IAAMO,EAASJ,KAAKC,MAAMJ,GAC1BM,EAAQ,YAAOC,GAEjBD,EAASV,KAAKH,GACdQ,aAAaO,QAXG,QAWkBL,KAAKM,UAAUH,KA2CpCI,WAxCI,SAAC1B,GAClB,IAAIsB,EAAoB,GAClBN,EAAMC,aAAaC,QAhBT,SAiBZF,IAEFM,EADeH,KAAKC,MAAMJ,GACRR,QAAO,SAACmB,GAAD,OAAiBA,EAAK3B,KAAOA,MAGxDiB,aAAaO,QAtBG,QAsBkBL,KAAKM,UAAUH,KAgCxBM,QApBX,SAACnB,GACf,IAAMO,EAAMC,aAAaC,QAnCT,SAoChB,OAAIF,EACaG,KAAKC,MAAMJ,GACZR,QAAO,SAACmB,GAAD,OAAiBA,EAAK3B,KAAOS,EAAKT,MAEhD,MAcyBc,SAAQe,WA7BzB,SAACpB,GAClB,IAAMO,EAAMF,IACZ,GAAIE,EAAK,CACP,IAAMO,EAASP,EAAIR,QAAO,SAACmB,GAAD,OAAUA,EAAK3B,KAAOS,EAAKT,MACrDuB,EAAOX,KAAKH,GACZQ,aAAaO,QA9BC,QA8BoBL,KAAKM,UAAUF,QCQxCO,EA3BgBjE,gBAAK,YAA0B,IAAvBkE,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrCtC,EAAWC,cACT+B,EAAeb,IAAfa,WAOR,OACE,yBAAK/D,UAAU,2BAA2BsE,WAAS,EAACC,YAAaF,GAC/D,yBAAKrE,UAAU,aACb,wBAAIA,UAAU,cAAcoE,EAAKI,OACjC,6BACA,wBAAIxE,UAAU,cAAd,WAAoCoE,EAAKK,QACzC,6BACA,yBAAKzE,UAAS,oBAAeI,IAAOsE,WAAaN,EAAKO,MACtD,yBAAK3E,UAAU,eACb,4BAAQA,UAAU,aAAac,QAAS,kBAd5BuB,EAc6C+B,EAAK/B,GAbpE0B,EAAW1B,QACXN,EAASY,EAAWN,IAFH,IAACA,IAcZ,qBCGKuC,EAxBoB1E,gBAAK,gBAAGkE,EAAH,EAAGA,KAAMS,EAAT,EAASA,OAAT,OACtC,oCACGT,EAAK7B,OAAS,EACb6B,EAAKU,KAAI,SAAChC,GACR,IAAMsB,EAAO,CACX/B,GAAIS,EAAKT,GACTmC,MAAO1B,EAAK0B,MACZG,KAAM7B,EAAK6B,KACXF,OAAQ3B,EAAK2B,QAEf,OACE,kBAAC,EAAD,CACEM,IAAKjC,EAAKT,GACV+B,KAAMA,EACNC,UAAW,SAACW,GAAD,OAAYH,EAAOG,EAAGlC,SAKvC,wBAAI9C,UAAU,YAAd,gBCuISiF,EAvJiB/E,gBAAK,SAACgF,GAAmB,IAAD,EACpBC,mBAAkB,IADE,mBAC/CC,EAD+C,KACpCC,EADoC,OAEZF,mBAAkB,IAFN,mBAE/CG,EAF+C,KAEhCC,EAFgC,OAGpBJ,mBAAkB,IAHE,mBAG/CK,EAH+C,KAGpCC,EAHoC,KAKhDC,EAAWC,mBAEX5D,EAAWC,cACTkC,EAAehB,IAAfgB,WAER0B,qBAAU,WACRP,EAAaH,EAAMW,KAAKhD,QAAO,SAACC,GAAD,MAA0B,SAAhBA,EAAK2B,WAC9Cc,EACEL,EAAMW,KAAKhD,QAAO,SAACC,GAAD,MAA0B,gBAAhBA,EAAK2B,WAEnCgB,EAAaP,EAAMW,KAAKhD,QAAO,SAACC,GAAD,MAA0B,SAAhBA,EAAK2B,aAC7C,CAACS,EAAMW,OAEV,IAAMC,EAAoB5D,uBAAY,SAAC8C,GACrCA,EAAEe,mBACD,IAEGC,EAAqB9D,uBACzB,SAAC8C,EAAQlC,GACP4C,EAASO,QAAUnD,IAErB,CAAC4C,IAGGQ,EAAoBhE,uBACxB,SAACY,GACC,OAAQA,EAAK2B,QACX,IAAK,OACH,IAAM0B,EAAmBf,EAAUvC,QACjC,SAACuD,GAAD,OAAcA,EAAS/D,KAAOS,EAAKT,MAErCgD,EAAac,GACb,MACF,IAAK,cACH,IAAME,EAAuBf,EAAczC,QACzC,SAACuD,GAAD,OAAcA,EAAS/D,KAAOS,EAAKT,MAErCkD,EAAiBc,GACjB,MACF,IAAK,OACH,IAAMC,EAAmBd,EAAU3C,QACjC,SAACuD,GAAD,OAAcA,EAAS/D,KAAOS,EAAKT,MAErCoD,EAAaa,MAMnB,CAACd,EAAWF,EAAeF,IAGvBmB,EAAgBrE,uBACpB,SAAC8C,EAAQwB,GACP,GAAIA,IAAed,EAASO,QAAQxB,OAEpC,GAAmB,SAAf+B,EAAuB,CACzB,IAAM1D,EAAO4C,EAASO,QACtBC,EAAkBpD,GAElB,IAAM2D,EAAU,CACdpE,GAAIS,EAAKT,GACTsC,KAAM7B,EAAK6B,KACXH,MAAO1B,EAAK0B,MACZC,OAAQ+B,GAEVnB,EAAa,GAAD,mBAAKD,GAAL,CAAgBqB,KAC5B1E,EAASiB,EAAiByD,IAC1BvC,EAAWuC,QACN,GAAmB,gBAAfD,EAA8B,CACvC,IAAM1D,EAAO4C,EAASO,QACtBC,EAAkBpD,GAElB,IAAM2D,EAAU,CACdpE,GAAIS,EAAKT,GACTsC,KAAM7B,EAAK6B,KACXH,MAAO1B,EAAK0B,MACZC,OAAQ+B,GAEVjB,EAAiB,GAAD,mBAAKD,GAAL,CAAoBmB,KACpC1E,EAASiB,EAAiByD,IAC1BvC,EAAWuC,QACN,GAAmB,SAAfD,EAAuB,CAChC,IAAM1D,EAAO4C,EAASO,QACtBC,EAAkBpD,GAElB,IAAM2D,EAAU,CACdpE,GAAIS,EAAKT,GACTsC,KAAM7B,EAAK6B,KACXH,MAAO1B,EAAK0B,MACZC,OAAQ+B,GAEVf,EAAa,GAAD,mBAAKD,GAAL,CAAgBiB,KAC5B1E,EAASiB,EAAiByD,IAC1BvC,EAAWuC,MAGf,CACE1E,EACAyD,EACAE,EACAQ,EACAZ,EACAF,EACAlB,IAIJ,OACE,yBAAKlE,UAAWI,IAAOgC,SACrB,yBAAKpC,UAAWI,IAAOsG,KACrB,sCACA,yBACE1G,UAAWI,IAAOuG,OAClBC,WAAY,SAAC5B,GAAD,OAAOc,EAAkBd,IACrC6B,OAAQ,SAAC7B,GAAD,OAAOuB,EAAcvB,EAAG,UAEhC,kBAAC,EAAD,CAAUZ,KAAMgB,EAAWP,OAAQmB,MAIvC,yBAAKhG,UAAWI,IAAOsG,KACrB,6CACA,yBACE1G,UAAWI,IAAOuG,OAClBC,WAAY,SAAC5B,GAAD,OAAOc,EAAkBd,IACrC6B,OAAQ,SAAC7B,GAAD,OAAOuB,EAAcvB,EAAG,iBAEhC,kBAAC,EAAD,CAAUZ,KAAMkB,EAAeT,OAAQmB,MAI3C,yBAAKhG,UAAWI,IAAOsG,KACrB,sCACA,yBACE1G,UAAWI,IAAOuG,OAClBC,WAAY,SAAC5B,GAAD,OAAOc,EAAkBd,IACrC6B,OAAQ,SAAC7B,GAAD,OAAOuB,EAAcvB,EAAG,UAEhC,kBAAC,EAAD,CAAUZ,KAAMoB,EAAWX,OAAQmB,UCpI9Bc,G,MAlBY,WACzB,IAAMpF,EAAYC,aAChB,SAACN,GAAD,OAAsBA,EAAMO,MAAMA,QAClCC,KAH6B,EAKLsD,mBAAkB,IALb,mBAKxBvD,EALwB,KAKjBmF,EALiB,OAMK5B,mBAAiB,GANtB,mBAMxB6B,EANwB,KAMZC,EANY,KAe/B,OAPArB,qBAAU,WACJlE,EAAUa,SAAWyE,IACvBC,EAAcvF,EAAUa,QACxBwE,EAASrF,MAEV,CAACA,EAAWsF,IAER,kBAAC,EAAD,CAAOnB,KAAMjE,M,iBCyCPsF,EAvDgBhH,gBAAK,YAA2B,IAAxBiH,EAAuB,EAAvBA,UAAWhH,EAAY,EAAZA,MAAY,EAClCgF,mBAAiB,IADiB,mBACrDiC,EADqD,KAC9CC,EAD8C,OAE9BlC,mBAAiB,IAFa,mBAErDmC,EAFqD,KAE5CC,EAF4C,KAiBtDC,EAAkB,WACtBH,EAAS,IACTE,EAAW,KAGb,OACE,0BACEE,SApBiB,SAACC,GAEpB,GADAA,EAAM3B,iBACQ,KAAVqB,GAA4B,KAAZE,EAApB,CACA,IAAMK,EAAU,CACdtF,GAAIuF,KAAKC,MACTrD,MAAO4C,EACPzC,KAAM2C,EACN7C,OAAQ,QAEV0C,EAAUQ,GACVH,MAWExH,UAAS,UAAe,WAAVG,EAAqB,GAAKC,IAAOC,OAE/C,yBAAKL,UAAU,cACb,2BAAOsC,QAAQ,QAAQtC,UAAWI,IAAOoE,OAAzC,eAGA,2BACEsD,SAAU,SAAC9C,GAAD,OAAOqC,EAASrC,EAAE2B,OAAOoB,QACnCA,MAAOX,EACPrH,KAAK,OACLiI,MAAO,CAAEC,MAAO,SAChB/G,KAAK,QACLgH,YAAY,QACZ7F,GAAG,aAEL,8BACEyF,SAAU,SAAC9C,GAAD,OAAOuC,EAAWvC,EAAE2B,OAAOoB,QACrCA,MAAOT,EACPU,MAAO,CAAEC,MAAO,QAASE,OAAQ,SACjCjH,KAAK,OACLgH,YAAY,uBAEd,4BAAQnI,KAAK,SAASC,UAAU,eAAhC,aCpBOoI,EA3BQ,WACrB,IAAMtG,EAAaH,aACjB,SAACN,GAAD,OAAsBA,EAAMlB,MAAMA,QAClC0B,KAEIE,EAAWC,cACT0B,EAASR,IAATQ,KAEF2E,EAAanG,uBACjB,SAACY,GACCY,EAAKZ,GACLf,EAASU,EAAQK,MAEnB,CAACf,EAAU2B,IAGb,OACE,yBAAK1D,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAMmH,UAAWkB,EAAYlI,MAAO2B,QCrB/BwG,EAJW,kBACxB,wBAAItI,UAAU,YAAd,gCCYauI,EAVa,WAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKlI,YAAL,KAAgCmI,UAAWC,IAC5D,kBAAC,IAAD,CAAOF,KAAI,UAAKlI,YAAL,SAAoCmI,UAAWE,IAC1D,kBAAC,IAAD,CAAOH,KAAK,IAAIC,UAAWJ,M,iBCqBlBO,EAvBO,WACpB,IAAM/G,EAAaH,aACjB,SAACN,GAAD,OAAsBA,EAAMlB,MAAMA,QAClC0B,KAEMsB,EAAWD,IAAXC,OACFpB,EAAWC,cAEjB4D,qBAAU,WACR,IAAMkD,EAAc3F,IACpBpB,EAASgB,EAAe+F,MACvB,IAEH,IAAMC,EAA4B,WAAfjH,EAA0B,GAAK1B,IAAOC,KAEzD,OACE,yBAAKL,UAAS,UAAK+I,EAAL,YAAmB3I,IAAOgC,UACtC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCvBO4G,EAAQC,YAAe,CAClCC,QAAS,CACPtH,MAAOuH,EACPhJ,MAAOiJ,KCOXC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAD,CAAQO,SAAS,KACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SlBoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.cd76df36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Board_wrapper__13Igb\",\"col\":\"Board_col__1zwdI\",\"target\":\"Board_target__2GBE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle_wrapper\":\"ToggleTheme_toggle_wrapper__3RONo\",\"circle\":\"ToggleTheme_circle__36HxD\",\"day\":\"ToggleTheme_day__2j8gr\",\"dark\":\"ToggleTheme_dark__2nNMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bright\":\"Header_bright__ROfPv\",\"wrapper\":\"Header_wrapper__4Axjt\",\"dark\":\"Header_dark__1zK7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Form_dark__QlPgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ox-V\",\"dark\":\"App_dark__2cgO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Navigation_dark___PJrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre_init\":\"Note_pre_init__3GAyh\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./Badge.css\";\n\nconst Badge: React.FC<{ count: number; type: string }> = ({ count, type }) => {\n  return (\n    <div className={`container_badge ${type}`}>\n      <span>{count}</span>\n    </div>\n  );\n};\n\nexport default Badge;\n","import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Navigation.module.css\";\n\ninterface IProps {\n  theme: string;\n}\n\nconst Navigation: React.FC<IProps> = memo(({ theme }) => (\n  <nav className={`${theme === \"bright\" ? \"\" : styles.dark}`}>\n    <ul className=\"inline\">\n      <li>\n        <Link to={`${process.env.PUBLIC_URL}/`}>Main</Link>\n      </li>\n      <li>\n        <Link to={`${process.env.PUBLIC_URL}/list`}>All</Link>\n      </li>\n    </ul>\n  </nav>\n));\n\nexport default Navigation;\n","import React, { memo } from \"react\";\nimport styles from \"./ToggleTheme.module.css\";\n\ninterface IProps {\n  changeTheme: (theme: string) => void;\n  theme: string;\n}\n\nconst ToggleTheme: React.FC<IProps> = memo(({ changeTheme, theme }) => {\n  const toggleTheme = (theme: string) => {\n    const themeName = theme === \"bright\" ? \"dark\" : \"bright\";\n    changeTheme(themeName);\n  };\n\n  const themeClass = theme === \"bright\" ? styles.day : styles.dark;\n\n  return (\n    <div className={styles.toggle_wrapper}>\n      <div\n        className={styles.circle + \" \" + themeClass}\n        onClick={() => toggleTheme(theme)}\n      ></div>\n    </div>\n  );\n});\n\nexport default ToggleTheme;\n","import { ITheme, IThemeState } from \"interfaces/interfaces\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState: IThemeState = {\n  theme: \"bright\",\n};\n\nexport const themeSlice = createSlice({\n  name: \"theme\",\n  initialState,\n  reducers: {\n    // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n    // doesn't actually mutate the state because it uses the Immer library,\n    // which detects changes to a \"draft state\" and produces a brand new\n    // immutable state based off those changes\n\n    changeTheme: (state, action: PayloadAction<ITheme>) => {\n      state.theme = action.payload.theme;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { changeTheme } = themeSlice.actions;\n\nexport default themeSlice.reducer;\n","import React, { useCallback } from \"react\";\nimport styles from \"./Header.module.css\";\n\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Badge from \"components/Badge/Badge\";\nimport { RootState } from \"store\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport ToggleTheme from \"components/Toggle/ToggleTheme\";\nimport { changeTheme } from \"store/ThemeSlice\";\n\nconst Header: React.FC = () => {\n  const tasksList = useSelector(\n    (state: RootState) => state.tasks.tasks,\n    shallowEqual\n  );\n  const themeStyle = useSelector(\n    (state: RootState) => state.theme.theme,\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  const changeThemeCB = useCallback(\n    (theme: string) => {\n      dispatch(changeTheme({ theme }));\n    },\n    [dispatch]\n  );\n\n  const themeClass = themeStyle === \"bright\" ? styles.bright : styles.dark;\n\n  return (\n    <nav className={`border split-nav ${themeClass} ${styles.wrapper}`}>\n      <div className=\"nav-brand\">\n        <h3>\n          <Link to={`${process.env.PUBLIC_URL}/`}>NOTEBOOK</Link>\n        </h3>\n      </div>\n      <ToggleTheme changeTheme={changeThemeCB} theme={themeStyle} />\n      <div className=\"collapsible\">\n        <input id=\"collapsible1\" type=\"checkbox\" name=\"collapsible1\" />\n        <button>\n          <label htmlFor=\"collapsible1\">\n            <div className=\"bar1\"></div>\n            <div className=\"bar2\"></div>\n            <div className=\"bar3\"></div>\n          </label>\n        </button>\n        {tasksList.length > 0 && <Badge type=\"menu\" count={tasksList.length} />}\n        <div className=\"collapsible-body\">\n          <Navigation theme={themeStyle} />\n          {tasksList.length > 0 && (\n            <Badge type=\"link\" count={tasksList.length} />\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import { ITask, ITaskState } from \"interfaces/interfaces\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState: ITaskState = {\n  tasks: [],\n};\n\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n    // doesn't actually mutate the state because it uses the Immer library,\n    // which detects changes to a \"draft state\" and produces a brand new\n    // immutable state based off those changes\n    addTask: (state, action: PayloadAction<ITask>) => {\n      const newState = [...state.tasks, action.payload];\n      state.tasks = newState;\n    },\n    deleteTask: (state, action: PayloadAction<number>) => {\n      const filtredTasks = state.tasks.filter(\n        (task) => task.id !== action.payload\n      );\n      state.tasks = filtredTasks;\n    },\n    addStoredTasks: (state, action: PayloadAction<ITask[]>) => {\n      const newState = [...state.tasks, ...action.payload];\n      state.tasks = newState;\n    },\n    updateStatusTask: (state, action: PayloadAction<ITask>) => {\n      const newState = state.tasks.filter(\n        (task) => task.id !== action.payload.id\n      );\n      newState.push(action.payload);\n      state.tasks = newState;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTask, deleteTask, addStoredTasks, updateStatusTask } =\n  taskSlice.actions;\n\nexport default taskSlice.reducer;\n","import { ITask } from \"interfaces/interfaces\";\n\nconst storageName = \"NOTES\";\n\nexport const useStorage = () => {\n  const save = (task: ITask) => {\n    let newTasks: ITask[] = [];\n    const res = localStorage.getItem(storageName);\n    if (res) {\n      const result = JSON.parse(res);\n      newTasks = [...result];\n    }\n    newTasks.push(task);\n    localStorage.setItem(storageName, JSON.stringify(newTasks));\n  };\n\n  const removeTask = (id: number) => {\n    let newTasks: ITask[] = [];\n    const res = localStorage.getItem(storageName);\n    if (res) {\n      const result = JSON.parse(res);\n      newTasks = result.filter((item: ITask) => item.id !== id);\n    }\n\n    localStorage.setItem(storageName, JSON.stringify(newTasks));\n  };\n\n  const updateTask = (task: ITask) => {\n    const res = getAll();\n    if (res) {\n      const result = res.filter((item) => item.id !== task.id);\n      result.push(task);\n      localStorage.setItem(storageName, JSON.stringify(result));\n    }\n  };\n\n  const getTask = (task: ITask) => {\n    const res = localStorage.getItem(storageName);\n    if (res) {\n      const result = JSON.parse(res);\n      return result.filter((item: ITask) => item.id === task.id);\n    } else {\n      return null;\n    }\n  };\n\n  const getAll = (): ITask[] => {\n    let parsedRes: ITask[] = [];\n    const res = localStorage.getItem(storageName);\n    if (res) {\n      parsedRes = JSON.parse(res);\n    }\n\n    return parsedRes;\n  };\n\n  return { save, removeTask, getTask, getAll, updateTask };\n};\n","import React, { memo } from \"react\";\nimport styles from \"./Note.module.css\";\n\nimport { ITask } from \"interfaces/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTask } from \"store/TaskSlice\";\nimport { useStorage } from \"hooks/useStorage\";\n\ninterface IProps {\n  data: ITask;\n  dragStart: (e: any) => void;\n}\n\nconst Note: React.FC<IProps> = memo(({ data, dragStart }) => {\n  const dispatch = useDispatch();\n  const { removeTask } = useStorage();\n\n  const deleteNote = (id: number) => {\n    removeTask(id);\n    dispatch(deleteTask(id));\n  };\n\n  return (\n    <div className=\"card child-shadows-hover\" draggable onDragStart={dragStart}>\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{data.title}</h4>\n        <hr />\n        <h5 className=\"card-title\">status: {data.status}</h5>\n        <hr />\n        <pre className={`card-text ${styles.pre_init}`}>{data.desc}</pre>\n        <div className=\"btn_wrapper\">\n          <button className=\"btn-danger\" onClick={() => deleteNote(data.id)}>\n            Delete Note\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Note;\n","import React, { memo } from \"react\";\nimport { ITask } from \"interfaces/interfaces\";\n\nimport Note from \"components/Note/Note\";\n\ninterface IProps {\n  data: ITask[];\n  onDrag: (e: any, task: ITask) => void;\n}\n\nconst NoteList: React.FC<IProps> = memo(({ data, onDrag }) => (\n  <>\n    {data.length > 0 ? (\n      data.map((task: ITask) => {\n        const data = {\n          id: task.id,\n          title: task.title,\n          desc: task.desc,\n          status: task.status,\n        };\n        return (\n          <Note\n            key={task.id}\n            data={data}\n            dragStart={(e: any) => onDrag(e, task)}\n          />\n        );\n      })\n    ) : (\n      <h1 className=\"no_notes\">NO NOTES</h1>\n    )}\n  </>\n));\n\nexport default NoteList;\n","import React, { useState, useRef, useEffect, memo, useCallback } from \"react\";\nimport { ITask } from \"interfaces/interfaces\";\nimport styles from \"./Board.module.css\";\nimport { useDispatch } from \"react-redux\";\n\nimport { updateStatusTask } from \"store/TaskSlice\";\nimport NoteList from \"components/List/NoteList\";\nimport { useStorage } from \"hooks/useStorage\";\n\ninterface IProps {\n  list: ITask[];\n}\n\nconst Board: React.FC<IProps> = memo((props: IProps) => {\n  const [todoTasks, setTodoTasks] = useState<ITask[]>([]);\n  const [progressTasks, setProgressTasks] = useState<ITask[]>([]);\n  const [doneTasks, setDoneTasks] = useState<ITask[]>([]);\n\n  const dragItem = useRef() as React.MutableRefObject<ITask>;\n\n  const dispatch = useDispatch();\n  const { updateTask } = useStorage();\n\n  useEffect(() => {\n    setTodoTasks(props.list.filter((task) => task.status === \"todo\"));\n    setProgressTasks(\n      props.list.filter((task) => task.status === \"in_progress\")\n    );\n    setDoneTasks(props.list.filter((task) => task.status === \"done\"));\n  }, [props.list]);\n\n  const onDragOverHandler = useCallback((e: any) => {\n    e.preventDefault();\n  }, []);\n\n  const onDragStartHandler = useCallback(\n    (e: any, task: ITask) => {\n      dragItem.current = task;\n    },\n    [dragItem]\n  );\n\n  const filtredDataByTask = useCallback(\n    (task: ITask) => {\n      switch (task.status) {\n        case \"todo\":\n          const filtredTodoTasks = todoTasks.filter(\n            (fromTask) => fromTask.id !== task.id\n          );\n          setTodoTasks(filtredTodoTasks);\n          break;\n        case \"in_progress\":\n          const filtredProgressTasks = progressTasks.filter(\n            (fromTask) => fromTask.id !== task.id\n          );\n          setProgressTasks(filtredProgressTasks);\n          break;\n        case \"done\":\n          const filtredDoneTasks = doneTasks.filter(\n            (fromTask) => fromTask.id !== task.id\n          );\n          setDoneTasks(filtredDoneTasks);\n          break;\n        default:\n          break;\n      }\n    },\n    [doneTasks, progressTasks, todoTasks]\n  );\n\n  const onDropHandler = useCallback(\n    (e: any, dropTarget: string) => {\n      if (dropTarget === dragItem.current.status) return;\n\n      if (dropTarget === \"todo\") {\n        const task = dragItem.current;\n        filtredDataByTask(task);\n\n        const newTask = {\n          id: task.id,\n          desc: task.desc,\n          title: task.title,\n          status: dropTarget,\n        };\n        setTodoTasks([...todoTasks, newTask]);\n        dispatch(updateStatusTask(newTask));\n        updateTask(newTask);\n      } else if (dropTarget === \"in_progress\") {\n        const task = dragItem.current;\n        filtredDataByTask(task);\n\n        const newTask = {\n          id: task.id,\n          desc: task.desc,\n          title: task.title,\n          status: dropTarget,\n        };\n        setProgressTasks([...progressTasks, newTask]);\n        dispatch(updateStatusTask(newTask));\n        updateTask(newTask);\n      } else if (dropTarget === \"done\") {\n        const task = dragItem.current;\n        filtredDataByTask(task);\n\n        const newTask = {\n          id: task.id,\n          desc: task.desc,\n          title: task.title,\n          status: dropTarget,\n        };\n        setDoneTasks([...doneTasks, newTask]);\n        dispatch(updateStatusTask(newTask));\n        updateTask(newTask);\n      }\n    },\n    [\n      dispatch,\n      doneTasks,\n      dragItem,\n      filtredDataByTask,\n      progressTasks,\n      todoTasks,\n      updateTask,\n    ]\n  );\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.col}>\n        <span>TODO</span>\n        <div\n          className={styles.target}\n          onDragOver={(e) => onDragOverHandler(e)}\n          onDrop={(e) => onDropHandler(e, \"todo\")}\n        >\n          <NoteList data={todoTasks} onDrag={onDragStartHandler} />\n        </div>\n      </div>\n\n      <div className={styles.col}>\n        <span>IN PROGRESS</span>\n        <div\n          className={styles.target}\n          onDragOver={(e) => onDragOverHandler(e)}\n          onDrop={(e) => onDropHandler(e, \"in_progress\")}\n        >\n          <NoteList data={progressTasks} onDrag={onDragStartHandler} />\n        </div>\n      </div>\n\n      <div className={styles.col}>\n        <span>DONE</span>\n        <div\n          className={styles.target}\n          onDragOver={(e) => onDragOverHandler(e)}\n          onDrop={(e) => onDropHandler(e, \"done\")}\n        >\n          <NoteList data={doneTasks} onDrag={onDragStartHandler} />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Board;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { ITask } from \"interfaces/interfaces\";\nimport { RootState } from \"store\";\nimport Board from \"components/Board/Board\";\nimport \"./styles.css\";\n\nconst Listpage: React.FC = () => {\n  const tasksList = useSelector(\n    (state: RootState) => state.tasks.tasks,\n    shallowEqual\n  );\n  const [tasks, setTasks] = useState<ITask[]>([]);\n  const [taskLength, setTaskLength] = useState<number>(0);\n\n  useEffect(() => {\n    if (tasksList.length !== taskLength) {\n      setTaskLength(tasksList.length);\n      setTasks(tasksList);\n    }\n  }, [tasksList, taskLength]);\n\n  return <Board list={tasks} />;\n};\n\nexport default Listpage;\n","import React, { useState, memo } from \"react\";\nimport { TodoFormProps } from \"interfaces/interfaces\";\nimport styles from \"./Form.module.css\";\n\ninterface IProps extends TodoFormProps {\n  theme: string;\n}\n\nconst Form: React.FC<IProps> = memo(({ onAddTask, theme }) => {\n  const [input, setInput] = useState<string>(\"\");\n  const [txtArea, setTxtArea] = useState<string>(\"\");\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (input === \"\" || txtArea === \"\") return;\n    const formObj = {\n      id: Date.now(),\n      title: input,\n      desc: txtArea,\n      status: \"todo\",\n    };\n    onAddTask(formObj);\n    clearTextFields();\n  };\n\n  const clearTextFields = () => {\n    setInput(\"\");\n    setTxtArea(\"\");\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={`${theme === \"bright\" ? \"\" : styles.dark}`}\n    >\n      <div className=\"form-group\">\n        <label htmlFor=\"title\" className={styles.title}>\n          Create Task\n        </label>\n        <input\n          onChange={(e) => setInput(e.target.value)}\n          value={input}\n          type=\"text\"\n          style={{ width: \"15rem\" }}\n          name=\"title\"\n          placeholder=\"title\"\n          id=\"title...\"\n        />\n        <textarea\n          onChange={(e) => setTxtArea(e.target.value)}\n          value={txtArea}\n          style={{ width: \"15rem\", height: \"15rem\" }}\n          name=\"body\"\n          placeholder=\"Enter something...\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn-success\">\n          Save\n        </button>\n      </div>\n    </form>\n  );\n});\n\nexport default Form;\n","import React, { useCallback } from \"react\";\nimport Form from \"../Form/Form\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { addTask } from \"../../store/TaskSlice\";\nimport { ITask } from \"interfaces/interfaces\";\nimport { useStorage } from \"hooks/useStorage\";\nimport { RootState } from \"store\";\n\nconst Main: React.FC = () => {\n  const themeStyle = useSelector(\n    (state: RootState) => state.theme.theme,\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n  const { save } = useStorage();\n\n  const addNewtask = useCallback(\n    (task: ITask) => {\n      save(task);\n      dispatch(addTask(task));\n    },\n    [dispatch, save]\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 center\">\n          <Form onAddTask={addNewtask} theme={themeStyle} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst NoMatch: React.FC = () => (\n  <h1 className=\"no_notes\">PAGE NOT FOUND ERROR 404!!!</h1>\n);\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ListPage from \"components/Pages/ListPage\";\nimport MainPage from \"components/Pages/MainPage\";\nimport NoMatch from \"components/Pages/NoMatch\";\n\nconst RouterApp: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path={`${process.env.PUBLIC_URL}/`} component={MainPage} />\n      <Route path={`${process.env.PUBLIC_URL}/list`} component={ListPage} />\n      <Route path=\"*\" component={NoMatch} />\n    </Switch>\n  );\n};\n\nexport default RouterApp;\n","import React, { useEffect } from \"react\";\nimport Header from \"components/Header/Header\";\nimport RouterApp from \"routerApp\";\nimport { useStorage } from \"hooks/useStorage\";\nimport { addStoredTasks } from \"store/TaskSlice\";\nimport { RootState } from \"store\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport styles from \"./App.module.css\";\n\nconst App: React.FC = () => {\n  const themeStyle = useSelector(\n    (state: RootState) => state.theme.theme,\n    shallowEqual\n  );\n  const { getAll } = useStorage();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storedTasks = getAll();\n    dispatch(addStoredTasks(storedTasks));\n  }, []);\n\n  const styleTheme = themeStyle === \"bright\" ? \"\" : styles.dark;\n\n  return (\n    <div className={`${styleTheme} ${styles.wrapper}`}>\n      <Header />\n      <RouterApp />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport taskSliceReducer from \"./TaskSlice\";\nimport themeSliceReducer from \"./ThemeSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    tasks: taskSliceReducer,\n    theme: themeSliceReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import { createStore, applyMiddleware } from 'redux';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers/index';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./components/App/App\";\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { store } from \"./store\";\n// const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}